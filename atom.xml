<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Starrysky&#39;s Blog</title>
  
  
  <link href="http://dreamstarsky.github.com/atom.xml" rel="self"/>
  
  <link href="http://dreamstarsky.github.com/"/>
  <updated>2023-11-22T06:55:53.783Z</updated>
  <id>http://dreamstarsky.github.com/</id>
  
  <author>
    <name>Starrysky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>KMP</title>
    <link href="http://dreamstarsky.github.com/2023/11/22/KMP/"/>
    <id>http://dreamstarsky.github.com/2023/11/22/KMP/</id>
    <published>2023-11-22T06:55:22.000Z</published>
    <updated>2023-11-22T06:55:53.783Z</updated>
    
    <content type="html"><![CDATA[<h3 id="菜鸡的kmp算法小笔记"><a href="#菜鸡的kmp算法小笔记" class="headerlink" title="菜鸡的kmp算法小笔记"></a>菜鸡的kmp算法小笔记</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>如果比较的这一处前缀和后缀相等且该处模板和字符串不相等，那么就无需比较前缀，直接跳转到前缀后一位继续比较，若还不相等，重复上述操作，直至相等或到达模板的开头，这样就可以减少比较</p><p>那么找到模板的所有前后缀相等的地方，存入<code>ne</code>数组，<code>ne[i]</code>表示下标为i时最大前后缀长度</p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><h5 id="make-next"><a href="#make-next" class="headerlink" title="make_next"></a>make_next</h5><p>初始化<code>next</code>数组（用<code>next</code>可能冲突所以建议用<code>ne</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">make_next</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; ne,vector&lt;<span class="type">int</span>&gt;&amp; moban)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (moban.<span class="built_in">size</span>()==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    ne.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;moban.<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//j代表现在要比较的位置 &amp;&amp; 当前最大前缀长度-1（就是最大前缀的末尾的位置啦</span></span><br><span class="line">        <span class="keyword">while</span> (moban[i]!=moban[j] &amp;&amp; j)</span><br><span class="line">            j=ne[j<span class="number">-1</span>];</span><br><span class="line">            <span class="comment">//该处不相等，跳转到最大前缀后一位继续比较</span></span><br><span class="line">        <span class="keyword">if</span> (moban[i]==moban[j]) j++;</span><br><span class="line">            <span class="comment">//如果相等，则j后移一位</span></span><br><span class="line">        ne.<span class="built_in">push_back</span>(j);</span><br><span class="line">            <span class="comment">//添加最大前缀到ne[i]（j后移过了，所以现在j是前缀的后一位啦</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="find"><a href="#find" class="headerlink" title="find"></a>find</h5><p>查找是否包含模板串：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">find</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; s,vector&lt;<span class="type">int</span>&gt; moban)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ne;</span><br><span class="line">    <span class="built_in">make_next</span>(ne,moban);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (moban[j]!=s[i] &amp;&amp; j)</span><br><span class="line">            j=ne[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span> (s[i]==moban[j]) j++;    </span><br><span class="line">        <span class="keyword">if</span> (j==moban.<span class="built_in">size</span>()<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查找模板串出现的位置：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">find</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; s,vector&lt;<span class="type">int</span>&gt; moban)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ne,answer;</span><br><span class="line">    <span class="built_in">make_next</span>(ne,moban);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (j &amp;&amp; s[i]!=moban[j])</span><br><span class="line">            j=ne[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span> (s1[j]==s2[i]) j++;</span><br><span class="line">        <span class="keyword">if</span> (j==s1.<span class="built_in">size</span>()) &#123;answer.<span class="built_in">push_back</span>(i-j+<span class="number">1</span>);j=ne[j<span class="number">-1</span>];&#125;</span><br><span class="line">        <span class="comment">//这里模板串到头了，所以要回退到前缀的后一位继续比较</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">    <span class="comment">//这里存的是出现处的下标</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="（写的依托，应该没人看吧"><a href="#（写的依托，应该没人看吧" class="headerlink" title="（写的依托，应该没人看吧"></a>（写的依托，应该没人看吧</h6>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;菜鸡的kmp算法小笔记&quot;&gt;&lt;a href=&quot;#菜鸡的kmp算法小笔记&quot; class=&quot;headerlink&quot; title=&quot;菜鸡的kmp算法小笔记&quot;&gt;&lt;/a&gt;菜鸡的kmp算法小笔记&lt;/h3&gt;&lt;h4 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我是笨比</title>
    <link href="http://dreamstarsky.github.com/2023/11/19/%E6%88%91%E6%98%AF%E7%AC%A8%E6%AF%94/"/>
    <id>http://dreamstarsky.github.com/2023/11/19/%E6%88%91%E6%98%AF%E7%AC%A8%E6%AF%94/</id>
    <published>2023-11-19T13:50:22.000Z</published>
    <updated>2023-11-19T13:50:33.123Z</updated>
    
    <content type="html"><![CDATA[<h4 id="RT"><a href="#RT" class="headerlink" title="RT"></a>RT</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,max=INT_MAX,min=INT_MIN,temp;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=e;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; temp;</span><br><span class="line">    <span class="keyword">if</span> (max&lt;temp)max=temp;</span><br><span class="line">    <span class="keyword">if</span>(min&gt;temp)min=temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;RT&quot;&gt;&lt;a href=&quot;#RT&quot; class=&quot;headerlink&quot; title=&quot;RT&quot;&gt;&lt;/a&gt;RT&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>梦开始的地方-xdoj版</title>
    <link href="http://dreamstarsky.github.com/2023/11/17/%E6%A2%A6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9C%B0%E6%96%B9-xdoj%E7%89%88/"/>
    <id>http://dreamstarsky.github.com/2023/11/17/%E6%A2%A6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9C%B0%E6%96%B9-xdoj%E7%89%88/</id>
    <published>2023-11-17T08:27:22.000Z</published>
    <updated>2023-11-17T12:37:06.732Z</updated>
    
    <content type="html"><![CDATA[<h4 id="抽象代码："><a href="#抽象代码：" class="headerlink" title="抽象代码："></a>抽象代码：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> Oo[<span class="number">3</span>][<span class="number">101</span>]=&#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line">    <span class="type">int</span> oo,O;</span><br><span class="line">    cin &gt;&gt; oo;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> o=<span class="number">0</span>;o&lt;oo;o++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; Oo[<span class="number">0</span>][o];</span><br><span class="line">        Oo[<span class="number">1</span>][Oo[<span class="number">0</span>][o]]=<span class="number">1</span>;</span><br><span class="line">        Oo[<span class="number">2</span>][Oo[<span class="number">0</span>][o]]=o;</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; O;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> o=<span class="number">0</span>;o&lt;oo;o++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (O-Oo[<span class="number">0</span>][o]&gt;<span class="number">0</span> &amp;&amp; Oo[<span class="number">1</span>][O-Oo[<span class="number">0</span>][o]] &amp;&amp; o!=Oo[<span class="number">2</span>][O-Oo[<span class="number">0</span>][o]]) </span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; o &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; Oo[<span class="number">2</span>][O-Oo[<span class="number">0</span>][o]];</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;抽象代码：&quot;&gt;&lt;a href=&quot;#抽象代码：&quot; class=&quot;headerlink&quot; title=&quot;抽象代码：&quot;&gt;&lt;/a&gt;抽象代码：&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
